/**
 * General styling settings for Tarot Journal.
 * This file will be included on every page.
 */


:root {
    /* Color palette */
    --caput: #502419;
    --caput-grey: #45302b;
    --caput-grey-light: #634e49;

    --asparagus: #7ea172;
    --asparagus-dark: #638e54;

    --green-grad-0: #8daa76;
    --green-grad-1: #a3b67c;
    --green-grad-2: #b7c281;

    --sage: #c7cb85;

    --fawn: #e7a977;
    --fawn-red: #ef7e58;
    --fawn-orange: #f4a040;
    --fawn-yellow: #f8b65e;
    
    --peach: #ebbe9b;

    --paper: #f4e4dc; 
    --offwhite: #fcf7f5;

    /* Fonts */
    --heading-font: "Sedan SC", "Merriweather", serif;
    --body-font: "Times New Roman", Times, serif;

    /* Outline/border patterns. */
    --outline-dark-thick: 3px solid var(--caput);    
    --outline-dark-thin: 1px solid var(--caput);
    --outline-light: 0.95px var(--paper);

    /* Transition animation settings for easy consistency!*/
    --transition-background-color: 100ms background-color ease-in;
    --transition-hover-background-color: 200ms background-color ease-in-out;

    --transition-translate: 200ms translate ease-in;
    --transition-hover-translate: 300ms translate ease-in-out;

    --transition-spin: 200ms rotate ease-in-out;
    --transition-hover-spin: 300ms rotate ease-out;

    --transition-transform: 250ms transform ease-out;
    --transition-reversed-transform: 400 transform ease-in-out;
}

::selection {
    background-color: color-mix(in srgb, var(--asparagus) 40%, transparent);
}

:focus-visible {
    outline: dashed var(--asparagus) 2px;
    outline-offset: 1px;
}


body {
    background-color: var(--paper);
    color: var(--caput-grey);
    font-family: var(--body-font);

    margin: 0;
    min-height: 100vh;

    display: flex;
    flex-flow: column nowrap;
    gap: 0;
}

/* labels for screenreaders, worry about it later. */
.sr-label {
    display: none;
}

/* Minimally used, but styling regardless. */
code {
    background: var(--caput-grey-light);
    border-radius: 3px;
    color: var(--paper);

    padding: 0.5ex 1ex;
}

button, input, textarea {
    font: inherit;
    color: inherit;
    border: none;
    background-color: transparent;
    border-radius: 5px;
}

input {
    accent-color: var(--fawn);
}

h1, h2, h3, thead, .heading-font {
    font-family: var(--heading-font);
}

a {
    text-decoration: none;
    color: var(--asparagus-dark);
}

a:visited {
    color: var(--asparagus-dark);
}

a:hover {
    color: var(--green-grad-0);
}

/* uility wrapper for navigation */
a.invisible {
    display: contents;
}

/* NOTE: links do not pass contrast test against bg -- consider bolding or just darker greens!. */

/* main layout -- test values for display only.*/
header {
    padding: 3em 2em 1em;

    display: flex;
    flex-flow: row nowrap;
    align-items:self-end;
    justify-content: space-between;
}

#title {
    color: var(--caput);
    margin: 0;
}

main {
    flex-grow: 3;
    padding: 2em;
}

nav {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;

    padding: 0 2em;
    margin: 1em 0;
}

.nav-left, .nav-right {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    
    gap: 1em;
}

/* Only child .nav-right should still be on the right. */
.nav-right:only-child {
    margin-left: auto;
}

footer {
    font-family: var(--heading-font);
    padding: 1em 2em;
    border-top: var(--outline-dark-thin);
    
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


/* 
    BASE POPOVER.
*/

[popover] {
    background-color: var(--paper);
    border: none;
    border-radius: 5px;
    color: inherit;
    padding: 2em;
    position: relative;
    
    box-sizing: border-box;
    height: 65dvh;
    width: 85dvw;

    overflow-x: hidden;
}

[popover] h2 {
    margin: 0;
}

[popover]::backdrop {
    background-color: var(--caput);
    opacity: 40%;
}

[popover] .close {
    position: absolute;
    right: calc(0% + 2em);
    top: calc(0% + 2em);
}

.popover-wrapper {
    display: flex;
    flex-flow: column nowrap;
    height: 100%;
    overflow: hidden;
}

.popover-header {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
}

/* The reason I use a flex .popover-wrapper class is for this sizing to remain consistent and allow scrollbar. I'm unsure if it could work another way -- but currently, removing `display: flex;` from `.popover-wrapper` disables the scroll for the popover content! */
.popover-content {
    overflow-y: auto;
}


.settings {
    display: flex;
    flex-flow: column nowrap;
    gap: 1em;
    margin: 1em 0;
}

.settings h3 {
    margin: 0;
}

.settings .radio {
    display: flex;
    flex-flow: column nowrap;
}

.settings .radio h3 {
    margin-bottom: 1ex;
}

.settings .radio :not(h3) {
    margin-left: 1em;
}

#reset-storage {
    background-color: var(--fawn-red);
    padding: 1ex 0;
}

#reset-storage:hover {
    background-color: color-mix(in hsl, var(--fawn-red) 70%, var(--peach));
}


/* 
    BUTTONS + ICONS
*/

button {
    cursor: pointer;
    font-family: var(--heading-font);
    position: relative;
}

.bordered {
    border: var(--outline-dark-thick);
    border-radius: 5px;
}

button.icon:hover {  /* Specific effect for icon *buttons*. */
    background-color: color-mix(in srgb, var(--fawn), transparent);
}

.btn-active {  /* Ex: The navigator button for the current page. */
    background: var(--fawn);
}

.icon {
    --icon-size: 1.4em;
    border-radius: 3px;
    padding: 0.5ex 1ex;
}

.icon::before {
    content: "";

    background-color: var(--caput-grey);
    height: var(--icon-size);
    width: var(--icon-size);
    display: block;

    -webkit-mask-image: var(--icon-url);
    -webkit-mask-position: center;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-size: cover;
    mask-image: var(--icon-url);
    mask-position: center;
    mask-repeat: no-repeat;
    mask-size: cover;

    margin: auto;
}

.icon.red::before {
    background-color: var(--fawn-red);
}

.i-back::before {
    --icon-size: 1.2rem;
    --icon-url: url(/static/back.svg);
}

.i-calendar::before {
    --icon-url: url(/static/calendar.svg);
}

.i-close::before {
    --icon-url: url(/static/plus.svg);
    transform: rotateZ(45deg);
}

.i-log::before {
    --icon-url: url(/static/list.svg)
}

.i-plus::before {
    --icon-url: url(/static/plus.svg);
    --icon-size: 2.5em;
}

.i-flip::before {
    --icon-url: url(/static/rotate.svg);
}

.i-save::before {
    --icon-url: url(/static/save.svg);
}

.i-settings::before {
    --icon-url: url(/static/settings.svg);
}
